{"version":3,"sources":["components/ContactForm.jsx","components/Filter.jsx","components/ContactList.jsx","helpers/localStorage.js","helpers/contactsReduser.js","helpers/generateId.js","index.jsx","components/App.jsx"],"names":["ContactForm","addContact","useState","name","setName","number","setNumber","onSubmit","evt","preventDefault","alert","type","onChange","target","value","Filter","filter","filterChange","ContactList","contacts","deleteContact","map","id","key","onClick","save","localStorage","setItem","JSON","stringify","err","console","log","get","getItem","parse","ContactsReducer","state","payload","contact","contactId","generateId","require","uuidv4","ReactDOM","render","useReducer","reducer","dispatch","useEffect","storage","setFilter","filtredContacts","useMemo","toLowerCase","includes","find","isContact","document","querySelector"],"mappings":"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","file":"static/js/main.1b1a0a3e.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nexport default function ContactForm({ addContact }) {\n  const [name, setName] = useState('');\n\n  const updateName = ({ target }) => {\n    setName(target.value);\n  };\n\n  const [number, setNumber] = useState('');\n\n  const updateNumber = ({ target }) => {\n    setNumber(target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (!name || !number) {\n      alert('fill in all the necessary fields');\n      return;\n    }\n\n    addContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <span>Name</span>\n        <br />\n        <input type=\"name\" name=\"name\" onChange={updateName} value={name} />\n      </label>\n\n      <br />\n\n      <label>\n        <span>Number</span>\n        <br />\n        <input type=\"tel\" name=\"tel\" onChange={updateNumber} value={number} />\n      </label>\n\n      <br />\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","import React from 'react';\n\nexport default function Filter({ filter, filterChange }) {\n  const handleChange = ({ target }) => filterChange(target.value);\n\n  return (\n    <div>\n      <span>Find contacts by name</span>\n      <br />\n      <input type=\"text\" value={filter} onChange={handleChange} />\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function ContactList({ contacts, deleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <span>\n            {name}: {number}\n          </span>\n          <button onClick={() => deleteContact(id)}>Remove</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst get = key => {\n  try {\n    const contacts = localStorage.getItem(key);\n    return contacts ? JSON.parse(contacts) : null;\n  } catch (err) {\n    console.log('err');\n  }\n};\n\nexport default { save, get };\n","export default function ContactsReducer(state, { type, payload }) {\n  switch (type) {\n    case 'addContact':\n      return [...state, payload.contact];\n\n    case 'deleteContact':\n      return state.filter(contact => contact.id !== payload.contactId);\n\n    case 'addContactsFromStorage':\n      return [...payload.contacts];\n\n    default:\n      return state;\n  }\n}\n","const generateId = () => {\n  const uuidv4 = require('uuid/v4');\n  return uuidv4();\n};\n\nexport default generateId;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n","import React, { useState, useEffect, useMemo, useReducer } from 'react';\nimport ContactForm from './ContactForm';\nimport Filter from './Filter';\nimport ContactList from './ContactList';\nimport storage from '../helpers/localStorage';\nimport reducer from '../helpers/contactsReduser';\nimport generateId from '../helpers/generateId';\n\nexport default function App() {\n  const [contacts, dispatch] = useReducer(reducer, []);\n\n  useEffect(() => {\n    const contacts = storage.get('contacts');\n    if (contacts)\n      dispatch({ type: 'addContactsFromStorage', payload: { contacts } });\n  }, []);\n\n  useEffect(() => {\n    storage.save('contacts', contacts);\n  }, [contacts]);\n\n  const isContact = name =>\n    contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n\n  const addContact = (name, number) => {\n    if (isContact(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch({\n      type: 'addContact',\n      payload: {\n        contact: { id: generateId(), name, number },\n      },\n    });\n  };\n\n  const deleteContact = contactId =>\n    dispatch({ type: 'deleteContact', payload: { contactId } });\n\n  const [filter, setFilter] = useState('');\n\n  const filterChange = value => setFilter(value);\n\n  const filtredContacts = useMemo(\n    () =>\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\n      ),\n    [contacts, filter],\n  );\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm addContact={addContact} />\n\n      <h1>Contacts</h1>\n      <Filter filter={filter} filterChange={filterChange} />\n      <ContactList contacts={filtredContacts} deleteContact={deleteContact} />\n    </div>\n  );\n}\n"],"sourceRoot":""}